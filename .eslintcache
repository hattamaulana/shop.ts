[{"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/index.tsx":"1","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/reportWebVitals.ts":"2","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Routes.tsx":"3","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Header.tsx":"4","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductsPage.tsx":"5","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/AdminPage.tsx":"6","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/NotFoundPage.tsx":"7","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductPage.tsx":"8","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/LoginPage.tsx":"9","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductData.ts":"10","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/AdminProducts.tsx":"11","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/AdminUsers.tsx":"12","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Product.tsx":"13","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Tabs.tsx":"14","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/withLoader.tsx":"15","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ContactUsPage.tsx":"16","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ContactUs.tsx":"17","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Form.tsx":"18","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductsReducer.ts":"19","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductsTypes.ts":"20","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductsActions.ts":"21","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductsList.tsx":"22","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/BasketReducer.ts":"23","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/BasketTypes.ts":"24","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Store.ts":"25","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/BasketActions.ts":"26"},{"size":837,"mtime":1611589863173,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1607566095255,"results":"29","hashOfConfig":"28"},{"size":2319,"mtime":1611357266081,"results":"30","hashOfConfig":"28"},{"size":1811,"mtime":1611591647045,"results":"31","hashOfConfig":"28"},{"size":1583,"mtime":1611588154079,"results":"32","hashOfConfig":"28"},{"size":858,"mtime":1607827726217,"results":"33","hashOfConfig":"28"},{"size":217,"mtime":1607701575559,"results":"34","hashOfConfig":"28"},{"size":2639,"mtime":1611590763768,"results":"35","hashOfConfig":"28"},{"size":219,"mtime":1607702761937,"results":"36","hashOfConfig":"28"},{"size":1975,"mtime":1611451222273,"results":"37","hashOfConfig":"28"},{"size":167,"mtime":1607827602909,"results":"38","hashOfConfig":"28"},{"size":1419,"mtime":1607827718914,"results":"39","hashOfConfig":"28"},{"size":1745,"mtime":1609775867100,"results":"40","hashOfConfig":"28"},{"size":2189,"mtime":1609774475596,"results":"41","hashOfConfig":"28"},{"size":671,"mtime":1610496044587,"results":"42","hashOfConfig":"28"},{"size":1043,"mtime":1611364692361,"results":"43","hashOfConfig":"28"},{"size":1249,"mtime":1611364473994,"results":"44","hashOfConfig":"28"},{"size":8040,"mtime":1611364770857,"results":"45","hashOfConfig":"28"},{"size":983,"mtime":1611588880416,"results":"46","hashOfConfig":"28"},{"size":770,"mtime":1611588540005,"results":"47","hashOfConfig":"28"},{"size":1223,"mtime":1611588786068,"results":"48","hashOfConfig":"28"},{"size":995,"mtime":1611588002016,"results":"49","hashOfConfig":"28"},{"size":523,"mtime":1611589753327,"results":"50","hashOfConfig":"28"},{"size":299,"mtime":1611589008019,"results":"51","hashOfConfig":"28"},{"size":676,"mtime":1611589909736,"results":"52","hashOfConfig":"28"},{"size":219,"mtime":1611589102987,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"nm8srq",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/index.tsx",[],["114","115"],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/reportWebVitals.ts",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Routes.tsx",["116"],"import * as React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, RouteComponentProps, Switch } from \"react-router-dom\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport Header from \"./Header\";\nimport ProductsPage from \"./ProductsPage\";\nimport ProductPage from \"./ProductPage\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport LoginPage from \"./LoginPage\";\nimport ContactUsPage from './ContactUsPage';\n\n// semua component di dalam project react akan dirender atau diload\n// secara otomatis ketika user mengakses aplikasi atau project ini\n// fungsi React.lazy digunakan untuk melakukan render atau load \n// sesuai keinginan user\n// dibantu dengan class Suspense untuk menampilkan tampilan ketika loading\nconst AdminPage = React.lazy(() => import('./AdminPage'));\n\n// atribute exact digunakan untuk hanya menggunakan hanya \n// tidak menampilkan component saat system mengakses child route\nconst Routes: React.SFC<RouteComponentProps> = props => {\n  const [loggedIn, setLoggedIn] = React.useState(true);\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition\n            key={props.location.key}\n            timeout={500}\n            classNames=\"animate\" >\n              <Switch>\n                <Redirect exact={true} from=\"/\" to=\"/products\" />\n                <Route path=\"/login\" component={LoginPage} />\n                <Route path=\"/admin\">\n                  {\n                    loggedIn ? \n                      <React.Suspense fallback={<div className=\"page-container\">Loading...</div>}>\n                        <AdminPage /> \n                      </React.Suspense>\n                      : \n                      <Redirect to=\"/login\" />\n                    }\n                </Route>\n\n                <Route exact={true} path=\"/products\" component={ProductsPage} />\n                <Route path=\"/products/:id\" component={ProductPage} />\n                <Route path=\"/contactus\" component={ContactUsPage} />\n                <Route component={NotFoundPage} />\n              </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n    );\n};\n\nconst RoutesWrap: React.SFC = () => {\n    return (\n      <Router>\n        <Route component={Routes} />\n      </Router>\n    );\n };\n  \n  export default RoutesWrap;","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Header.tsx",["117"],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductsPage.tsx",["118"],"import * as React from \"react\";\nimport { IProduct } from './ProductData';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { IApplicationState } from './Store';\nimport { getProducts } from './ProductsActions';\nimport ProductsList from './ProductsList';\n\nimport \"url-search-params-polyfill\";\n\ninterface IProps extends RouteComponentProps {\n  getProducts: typeof getProducts;\n  loading: boolean;\n  products: IProduct[];\n}\n\nclass ProductsPage extends React.Component<IProps> {\n\n    public componentDidMount() {\n        this.props.getProducts();\n    }\n    // Perbedaan link dan nav link bisa di lihat di file Header.tsx\n    public render() {\n        const searchParams = new URLSearchParams(this.props.location.search);\n        const search = searchParams.get('search') || '';\n\n        return (\n          <div className=\"page-container\">\n            <p>\n              Welcome to React Shop where you can get all your tools for ReactJS!\n            </p>\n            <ProductsList\n              search={search}\n              products={this.props.products}\n              loading={this.props.loading} />\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (store: IApplicationState) => {\n  return {\n    loading: store.products.productsLoading,\n    products: store.products.products,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    getProducts: () => dispatch(getProducts())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProductsPage);\n","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/AdminPage.tsx",["119"],"import * as React from \"react\";\nimport { NavLink, Route, RouteComponentProps } from \"react-router-dom\";\nimport AdminProducs from './AdminProducts';\nimport AdminUsers from './AdminUsers';\n\n\nconst AdminPage: React.SFC = () => {\n  return (\n    <div className=\"page-container\">\n      <h1>Admin Panel</h1>\n      <ul className=\"admin-sections\">\n          <li key=\"users\">\n            <NavLink to={`/admin/users`} activeClassName=\"admin-link-active\">\n              Users\n            </NavLink>\n          </li>\n\n          <li key=\"products\">\n            <NavLink to={`/admin/products`} activeClassName=\"admin-link-active\">\n              Products\n            </NavLink>\n          </li>\n      </ul>\n\n      <Route path=\"/admin/users\" component={AdminUsers} />\n      <Route path=\"/admin/products\" component={AdminProducs} />\n    </div>\n  );\n};\n\nexport default AdminPage;","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/NotFoundPage.tsx",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductPage.tsx",["120"],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/LoginPage.tsx",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductData.ts",["121"],"import { wait } from \"@testing-library/react\";\n\nexport interface IProduct {\n    id: number;\n    name: string;\n    description: string;\n    price: number;\n    reviews: IReview[];\n}\n\nexport interface IReview {\n  comment: string;\n  reviewer: string;\n}\n\nexport const products: IProduct[] = [\n    {\n      description: \"A collection of navigational components that compose declaratively with your app\",\n      id: 1,\n      name: \"React Router\",\n      price: 8,\n      reviews: [\n        {\n          comment: \"Excellent! This does everything I want\",\n          reviewer: \"Billy\"\n        },\n        { comment: \"The best router I've ever worked with\", reviewer: \n        \"Sally\" }\n      ]\n    },\n    {\n      description: \"A library that helps manage state across your app\",\n      id: 2,\n      name: \"React Redux\",\n      price: 12,\n      reviews: [\n        {\n          comment: \"I've found this really useful in a large app I'm  working on\",\n          reviewer: \"Billy\"\n        },\n        {\n          comment: \"A bit confusing at first but simple when you get used to it\",\n          reviewer: \"Sally\"\n        }\n      ]\n    },\n    {\n      description: \"A library that helps you interact with a GraphQL backend\",\n      id: 3,\n      name: \"React Apollo\",\n      price: 12,\n      reviews: [\n        {\n          comment: \"I'll never work with a REST API again!\",\n          reviewer: \"Billy\"\n        },\n        {\n          comment: \"It makes working with GraphQL backends a breeze\",\n          reviewer: \"Sally\"\n        }\n      ]\n    }\n];\n\nconst waiting = (ms: number): Promise<void> => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport const getProduct = async (id: number): Promise<IProduct | null> => {\n  await waiting(1000);\n  const foundProducts = products.filter(customer => customer.id === id);\n  return foundProducts.length === 0 ? null : foundProducts[0];\n};\n\nexport const getProducts = async (): Promise<IProduct[]> => {\n  await waiting(1000);\n  return products;\n};","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/AdminProducts.tsx",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/AdminUsers.tsx",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Product.tsx",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Tabs.tsx",["122"],"import * as React from \"react\";\n\ninterface IProps {\n    headings: string[];\n}\n\ninterface IState {\n    activeName: string;\n    activeContent: React.ReactNode;\n}\n\ninterface ITabProps {\n  name: string;\n  initialActive?: boolean;\n  heading: () => string | JSX.Element;\n}\n\ninterface ITabsContext {\n  activeName?: string;\n  handleTabClick?: (name: string, content: React.ReactNode) => void;\n}\n\nconst TabsContext = React.createContext<ITabsContext>({});\n\nclass Tabs extends React.Component<{}, IState> {\n  public static Tab: React.SFC<ITabProps>  = props => (\n    <TabsContext.Consumer>\n      {(context: ITabsContext) => {\n        if (!context.activeName && props.initialActive) {\n          if (context.handleTabClick) {\n            context.handleTabClick(props.name, props.children);\n            return null;\n          }\n        }\n        \n        const activeName = context.activeName \n          ? context.activeName \n          : props.initialActive \n            ? props.name\n            : \"\";\n\n        const handleTabClick = (e: React.MouseEvent<HTMLLIElement>) => {\n          if (context.handleTabClick) {\n            context.handleTabClick(props.name, props.children);\n          }\n        };\n\n        return (\n          <li onClick={handleTabClick} \n              className={props.name === activeName ? \"active\" : \"\"}>\n            {props.heading()}\n          </li>\n        );\n      }}\n    </TabsContext.Consumer>\n  )\n\n  public constructor(props: IProps) {\n    super(props);\n  }\n\n  private handleOnClick = (e: React.MouseEvent<HTMLLIElement>) => {\n    const li = e.target as HTMLLIElement;\n    const heading: string = li.textContent ? li.textContent : '';\n  }\n\n  private handleTabClick = (name: string, content: React.ReactNode) => {\n    this.setState({ activeName: name, activeContent: content })\n  };\n\n  public render() {\n    return (\n      <TabsContext.Provider value={{ \n          activeName: this.state ? this.state.activeName : \"\", \n          handleTabClick: this.handleTabClick \n        }} \n      >\n          <ul className=\"tabs\">{this.props.children}</ul>\n          <div>{this.state && this.state.activeContent}</div>\n        </TabsContext.Provider>\n    );\n  }\n}\n\nexport default Tabs;","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/withLoader.tsx",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ContactUsPage.tsx",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ContactUs.tsx",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Form.tsx",["123"],"import * as React from 'react';\n\ninterface IFormProps {\n    defaultValues: IValues;\n    validationRules: IValidationProps;\n}\n\ninterface IFormContext {\n    values: IValues;\n    errors: IErrors;\n    setValue?: (fieldName: string, value: any) => void;\n    validate?: (fieldName: string, value: any) => void;\n}\n\nconst FormContext = React.createContext<IFormContext> ({\n    values: {},\n    errors: {}\n})\n\ninterface IFieldProps {\n    name: string;\n    label: string;\n    type?: \"Text\" | \"Email\" | \"Select\" | \"TextArea\";\n    options?: string[];\n}\n\ninterface IState {\n    values: IValues;\n    errors: IErrors;\n    submitting: boolean;\n    submitted: boolean;\n}\n\ninterface IValidation {\n    validator: Validator;\n    args?: any;\n}\n\ninterface IErrors {\n    [key: string]: string[];\n}\n\ninterface IValidationProps {\n    [key: string]: IValidation | IValidation[];\n}\n\nexport interface IValues {\n    [key: string]: any;\n};\n\nexport interface ISubmitResult {\n    success: boolean;\n    errors?: IErrors;\n}\n\ninterface IFormProps {\n    defaultValues: IValues;\n    validationRules: IValidationProps;\n    onSubmit: (values: IValues) => Promise<ISubmitResult>;\n}\n\nexport type Validator = (\n    fieldName: string,\n    values: IValues,\n    args?: any\n) => string;\n    \nexport const required: Validator = (\n    fieldName: string,\n    values: IValues,\n    args?: any\n): string => \n    values[fieldName] === undefined ||\n    values[fieldName] === null ||\n    values[fieldName] === \"\" \n        ? \"This must be populated\" \n        : '';\n\nexport const minLength: Validator = (\n    fieldName: string,\n    values: IValues,\n    length: number\n): string => \n    values[fieldName] && values[fieldName].length < length\n    ? `This must be at least ${length} characters`\n    : '';\n\nexport class Form extends React.Component<IFormProps, IState> {\n    private setValue = (fieldName: string, value: any) => {\n        const newValues = { ...this.state.values, [fieldName]: value };\n        this.setState({ values: newValues });\n    };\n\n    private validate = (\n        fieldName: string,\n        value: any\n    ): string[] => {\n        const rules = this.props.validationRules[fieldName];\n        const errors: string[] = [];\n\n        if (Array.isArray(rules)) {\n            rules.forEach(rule => {\n                const error = rule.validator(\n                    fieldName,\n                    this.state.values,\n                    rule.args\n                )\n                if (error) {\n                    errors.push(error);\n                }\n            })\n        } else {\n            if (rules) {\n                const error = rules.validator(fieldName, this.state.values, rules.args);\n                if (error) {\n                    errors.push(error);\n                }\n            }\n        }\n\n        const newErrors = { ...this.state.errors, [fieldName]: errors };\n        this.setState({ errors: newErrors });\n\n        return errors;\n    };\n\n    private validateForm(): boolean {\n        const errors: IErrors = {};\n        let haveError: boolean = false;\n        Object.keys(this.props.defaultValues).map(fieldName => {\n            errors[fieldName] = this.validate(fieldName, this.state.values[fieldName]);\n            if (errors[fieldName].length > 0) {\n                haveError = true;\n            }\n        });\n\n        this.setState({ errors });\n        return !haveError;\n    }\n\n    private handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if (this.validateForm()) {\n            this.setState({ submitting: true });\n\n            const result = await this.props.onSubmit(this.state.values);\n            this.setState({\n                errors: result.errors || {},\n                submitted: result.success,\n                submitting: false\n            })\n        }\n    }\n\n    public static Field: React.SFC<IFieldProps> = props => {\n        const { name, label, type, options } = props;\n        const handleChange = (\n            e: \n                | React.ChangeEvent<HTMLInputElement>\n                | React.ChangeEvent<HTMLTextAreaElement>\n                | React.ChangeEvent<HTMLSelectElement>,\n            context: IFormContext\n        ) => {\n            if (context.setValue) {\n                context.setValue(props.name, e.currentTarget.value)\n            }\n        }\n\n        const handleBlur = (\n            e: \n                | React.FocusEvent<HTMLInputElement>\n                | React.FocusEvent<HTMLTextAreaElement>\n                | React.FocusEvent<HTMLSelectElement>,\n            context: IFormContext\n        ) => {\n            if (context.validate) {\n                context.validate(props.name, e.currentTarget.value);\n            }\n        }\n\n        return (\n            <FormContext.Consumer>\n                {context => (\n                    <div className=\"form-group\">\n                        <label htmlFor={name}>{label}</label>\n                        {(type === 'Text' || type === 'Email') && (\n                            <input \n                                type={type.toLowerCase()} \n                                id={name} \n                                value={context.values[name]}\n                                onChange={e => handleChange(e, context)}\n                                onBlur={e => handleBlur(e, context)} />\n                        )}\n                        {(type === 'TextArea') && (\n                            <input \n                                type={type.toLowerCase()} \n                                id={name} \n                                value={context.values[name]}\n                                onChange={e => handleChange(e, context)}\n                                onBlur={e => handleBlur(e, context)} />\n                        )}\n                        \n                        {(type === 'Select') && (\n                            <select \n                                value={context.values[name]} \n                                onChange={e => handleChange(e, context)}\n                                onBlur={e => handleBlur(e, context)} >\n                                    {options && options.map(option => (\n                                        <option key={option} value={option}>\n                                            {option}\n                                        </option>\n                                    ))}\n                            </select>\n                        )}\n\n                        { context.errors[name] && \n                            context.errors[name].length > 0 &&\n                            context.errors[name].map(error => (\n                                <span key={error} className=\"form-error\">\n                                    {error}\n                                </span>\n                            ))\n                        }\n                    </div>\n                )}\n            </FormContext.Consumer>\n        );\n    }\n\n    constructor(props: IFormProps) {\n        super(props);\n        const errors: IErrors = {};\n\n        Object.keys(props.defaultValues).forEach(fieldName => {\n            errors[fieldName] = [];\n        })\n\n        this.state = {\n            errors,\n            values: props.defaultValues,\n            submitting: false,\n            submitted: false\n        };\n    }\n\n    public render() {\n        const context: IFormContext = {\n            values: this.state.values,\n            errors: this.state.errors,\n            setValue: this.setValue,\n            validate: this.validate\n        };\n\n        return (\n            <FormContext.Provider value={context}>\n                <form className=\"form\" noValidate={true} onSubmit={this.handleSubmit}>\n                    {this.props.children}\n                    <div className=\"form-group\">\n                        <button type=\"submit\" disabled={this.state.submitting || this.state.submitted}>Submit</button>\n                    </div>\n                </form>\n            </FormContext.Provider>\n        );\n    }\n}\n\nForm.Field.defaultProps = {\n    type: \"Text\"\n};","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductsReducer.ts",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductsTypes.ts",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductsActions.ts",["124","125"],"import { type } from 'os';\nimport { Action, ActionCreator, AnyAction, Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { getProduct as getProductFromAPI, getProducts as getProductsFromAPI } from './ProductData';\nimport { IProductsGetAllAction, IProductsGetSingleAction, IProductsLoadingAction, IProductsState, ProductsActionTypes } from './ProductsTypes';\n\nconst loading: ActionCreator<IProductsLoadingAction> = () => {\n    return {\n        type: ProductsActionTypes.LOADING\n    }\n};\n\nexport const getProducts: ActionCreator<ThunkAction<Promise<AnyAction>, IProductsState, null, IProductsGetAllAction>> = () => {\n    return async (dispatch: Dispatch) => {\n        dispatch(loading());\n\n        const products = await getProductsFromAPI();\n\n        return dispatch({ products, type: ProductsActionTypes.GETALL })\n    };\n};\n\nexport const getProduct: ActionCreator<ThunkAction<Promise<any>, IProductsState, null, IProductsGetSingleAction>> = (id: number) => {\n    return async (dispatch: Dispatch) => {\n        dispatch(loading());\n        \n        const product = await getProductFromAPI(id);\n        dispatch({\n            product,\n            type: ProductsActionTypes.GETSINGLE\n        })\n    }\n}","/mnt/DISKC/js/react-js/playground/react.shop.ts/src/ProductsList.tsx",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/BasketReducer.ts",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/BasketTypes.ts",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/Store.ts",[],"/mnt/DISKC/js/react-js/playground/react.shop.ts/src/BasketActions.ts",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":22,"column":20,"nodeType":"132","messageId":"133","endLine":22,"endColumn":31},{"ruleId":null,"fatal":true,"severity":2,"message":"134","line":30,"column":6},{"ruleId":"130","severity":1,"message":"135","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":14},{"ruleId":"130","severity":1,"message":"136","line":2,"column":26,"nodeType":"132","messageId":"133","endLine":2,"endColumn":45},{"ruleId":"130","severity":1,"message":"137","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":21},{"ruleId":"130","severity":1,"message":"138","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":14},{"ruleId":"130","severity":1,"message":"139","line":64,"column":11,"nodeType":"132","messageId":"133","endLine":64,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":130,"column":61,"nodeType":"142","messageId":"143","endLine":130,"endColumn":63},{"ruleId":"130","severity":1,"message":"144","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":14},{"ruleId":"130","severity":1,"message":"145","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"@typescript-eslint/no-unused-vars","'setLoggedIn' is assigned a value but never used.","Identifier","unusedVar","Parsing error: Identifier expected.","'Link' is defined but never used.","'RouteComponentProps' is defined but never used.","'getProducts' is defined but never used.","'wait' is defined but never used.","'heading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'type' is defined but never used.","'Action' is defined but never used.","no-global-assign","no-unsafe-negation"]